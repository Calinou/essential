// console language standard library

// creates a macro whose body is a format string
// i.e. macro greet [ say Hi, %1! ]
macro = [
    $arg1 = (concat [format [@@arg2]] (loopconcat i $numargs [concatword " $arg" (+ $i 1)]))
]

// binds a key so that it will toggle a variable
// i.e. bindvar 9 thirdperson
bindvar = [
  bind $arg1 [@arg2 (= $@arg2 0); if (= $@arg2 0) [echo @@arg2 OFF] [ echo @@arg2 ON]]
]
bindvarquiet = [
  bind $arg1 [@arg2 (= $@arg2 0)]
]

// same as above, but only binds for edit mode
editbindvar = [
  editbind $arg1 [@arg2 (= $@arg2 0); if (= $@arg2 0) [echo @@arg2 OFF] [ echo @@arg2 ON]]
]
editbindvarquiet = [
  editbind $arg1 [@arg2 (= $@arg2 0)]
]

// binds a key so that it will set a modifier while held down
bindmod = [
  bind $arg1 [@arg2 1; onrelease [@@arg2 0]]
]

// same as above, but only binds for edit mode
editbindmod = [
  editbind $arg1 [@arg2 1; onrelease [@@arg2 0]]
]

quine = [ echo (format "quine = [%1]" $quine) ]

loadsky = [
    skybox $arg1
    if (> $numargs 1) [
        spinsky $arg2
    ] [
        if (!=f $spinsky 0) [spinsky 0]
    ]
]

mapmsg = [ maptitle $arg1 ]

//--Tomatenquark--

// generates a string of tabs
// i.e. echo (concatword (gentabs 2) "hello" (gentabs 5) "world")
gentabs = [
  _gtabs = ""
  loop t $arg1 [_gtabs = (concatword $_gtabs "^t")]
  result $_gtabs
]

// moves a gui item to any position
// i.e. guiitemmove 0 -5 -15 [guititle "Hi"]
guiitemmove = [
  guialign $arg1 [
    guistrut @arg2;
    guilist [
      guistrut @arg3;
      @arg4
    ]
  ]
]

// add a new item to a list
// i.e. echo (listadd [a c d] "d")
listadd = [result (concatword $arg1 " ^"" $arg2 "^"" )]

// replaces an existing item in a list by its position
// i.e. echo (listreplace [a c c] 1 "b")
listreplace = [result (listsplice $arg1 $arg3 $arg2 1)]

// returns number of occurrences of an item in a given list
// i.e. echo (listoccount [item1 item2 item3 item2 item4 item2] "item2")
listoccount = [
  _listoc = 0
  looplist i $arg1 [
    if (= $arg3 1) [
      if (> (strstr $i $arg2) -1) [_listoc = (+ $_listoc 1)]
    ] [if (=s $i $arg2)[_listoc = (+ $_listoc 1)]]
  ]
  result $_listoc
]

// returns random item from given list
// i.e. echo (rndlist [hola hello olÃ¡ ahoy])
rndlist = [at $arg1 (rnd (listlen $arg1))]

// returns number of occurrences of a character in a string
// i.e. echo (stroccount "hello world" "o")
stroccount = [
  _stroc = 0
  loop i (strlen $arg1) [
    if (=s (substr $arg1 $i 1) $arg2)[_stroc = (+ $_stroc 1)]
  ]
  result $_stroc
]

// returns an unformatted string
// i.e. echo (strreform "^f2hello^n^tworld^7!^f3!")
strreform = [
  _strre = (strreplace $arg1 "^n" "")
  _strre = (strreplace $arg1 "^t" "")
  loop i 9 [
    _strre = (strreplace $_strre (concatword "^f" $i) "")
  ]
  result $_strre
]

// returns num of players and spectators (use 1 to count yourself)
// i.e. echo (concatword "players: " (at (numplayers 1) 0) " spectators: " (at (numplayers 1) 1))
numplayers = [
  _nactp = 0
  _nspct = 0
  looplist pcn (listclients $arg1 0) [
    if (= (isspectator $pcn) 0) [_nactp = (+ $_nactp 1)] [_nspct = (+ $_nspct 1)]
  ]
  result (concat $_nactp $_nspct)
]

// loads crosshairs from given path and saves them in a list
findcrosshairs = [
  loopfiles cs $arg1 "png" [
    _csHit = (concatword $arg1 "/" $cs "_hit.png")
    if (! (|| (= $arg2 1) (= (findfile $_csHit) 1))) [_csHit = "data/hit.png"] //checks if there is a _hit crosshair
    crosshairs = (listadd $crosshairs (concat (concatword $arg1 "/" $cs ".png") $_csHit))
  ]
]

// removes repeated occurrences from a given list
// i.e. echo (listunrepeat ["a" "b" "c" "a" "d" "e"])
listunrepeat = [
  _listur = []
  looplist i $arg1 [
    if (= (indexof $_listur $i) -1) [_listur = (listadd $_listur $i)]
  ]
  result $_listur
]

// returns all items in a given list that match a string
// i.e. echo (listmatch ["blue" "light green" "light blue" "green" "dark green" "dark blue"] "green")
listmatch = [
  _listm = []
  looplist i $arg1 [if (> (strstr $i $arg2) -1) [_listm = (listadd $_listm $i)]]
  result $_listm
]

// returns a list of files from a given folder/extension
// i.e. echo (getfileslist "packages/base" "ogz")
getfileslist = [
  _flist = []
  loopfiles fl $arg1 $arg2 [_flist = (listadd $_flist $fl)]
  result $_flist
]

// returns index of last occurrence in a string
// i.e. echo (strstrlast "hello world" "o")
strstrlast = [
  _stra = "-1"
  loop s (strlen $arg1) [
    if (=s (substr $arg1 $s 1) $arg2) [_stra = $s]
  ]
  result $_stra
]

// returns color and privilege from a given client
getclientpriv = [
    _mmpriv = (concat "^f7" 0) //white common
    if (ismaster $arg1) [_mmpriv = (concat "^f0" 1)] //green master
    if (isadmin $arg1) [_mmpriv = (concat "^f6" 2)] //orange admin
    if (isauth $arg1) [_mmpriv = (concat "^f5" 3)] //purple auth
    result $_mmpriv
]

// checks if client has any kind of privileges
haspriv = [if (|| (ismaster $arg1) (isadmin $arg1)) [result 1] [result 0]]

// returns list of client numbers that pass the filter
// i.e. echo (filteradmins (listclients 1))
filtermasters     = [listfilter i $arg1 [ismaster    $i]]
filteradmins      = [listfilter i $arg1 [isadmin     $i]]
filterauths       = [listfilter i $arg1 [isauth      $i]]
filterspectators  = [listfilter i $arg1 [isspectator $i]]
filterignored     = [listfilter i $arg1 [isignored   $i]]
filterbots        = [listfilter i $arg1 [isai        $i]]
// same as above, but returns those that do not pass the filter
filter!masters    = [listfilter i $arg1 [! (ismaster    $i)]]
filter!admins     = [listfilter i $arg1 [! (isadmin     $i)]]
filter!auths      = [listfilter i $arg1 [! (isauth      $i)]]
filter!spectators = [listfilter i $arg1 [! (isspectator $i)]]
filter!ignored    = [listfilter i $arg1 [! (isignored   $i)]]
filter!bots       = [listfilter i $arg1 [! (isai        $i)]]

// Loops through a given string's characters
// usage: /loopchar VAR "string" [action]
loopchar = [
    loop $arg1 (strlen $arg2) [
        $arg1 = (substr $arg2 $$arg1 1)
        arg3
    ]
]

// Function which "slides" text with configurable speed and spaces before repetition
// usage: (strscroll "YOUR TEXT" <string length> <speed in ms/char> <spaces between loop>
clamp  = [ max  $arg2 (min  $arg3 $arg1) ]
clampf = [ maxf $arg2 (minf $arg3 $arg1) ]
strscroll = [
    arg1 = (concat $arg1 (loopconcat i $arg4 []))
    arg4 = (strlen $arg1)
    substr (concatword $arg1 $arg1) (mod (div $getmillis $arg3) $arg4) (clamp $arg2 1 $arg4)
]

//maths
gcd = [ if (= $arg2 0) [ result $arg1 ] [ gcd $arg2 (modf $arg1 $arg2) ] ]
lcm = [ div (* $arg1 $arg2) (gcd $arg1 $arg2) ]